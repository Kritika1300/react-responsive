{"version":3,"sources":["../src/toQuery.js"],"names":["negate","cond","keyVal","k","v","realKey","join","conds","obj","rules","Object","keys","mq","all","forEach","push"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,IAAMA,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD;AAAA,uBAAiBA,IAAjB;AAAA,CAAf;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,CAAD,EAAIC,CAAJ,EAAU;AACvB,MAAMC,OAAO,GAAG,oCAAUF,CAAV,CAAhB,CADuB,CAGvB;;AACA,MAAI,OAAOC,CAAP,KAAa,QAAjB,EAA2B;AACzBA,IAAAA,CAAC,aAAMA,CAAN,OAAD;AACD;;AACD,MAAIA,CAAC,KAAK,IAAV,EAAgB;AACd,WAAOC,OAAP;AACD;;AACD,MAAID,CAAC,KAAK,KAAV,EAAiB;AACf,WAAOJ,MAAM,CAACK,OAAD,CAAb;AACD;;AACD,oBAAWA,OAAX,eAAuBD,CAAvB;AACD,CAdD;;AAgBA,IAAME,IAAI,GAAG,SAAPA,IAAO,CAACC,KAAD;AAAA,SAAWA,KAAK,CAACD,IAAN,CAAW,OAAX,CAAX;AAAA,CAAb;;eAEe,kBAACE,GAAD,EAAS;AACtB,MAAMC,KAAK,GAAG,EAAd;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYC,uBAAGC,GAAf,EAAoBC,OAApB,CAA4B,UAACX,CAAD,EAAO;AACjC,QAAMC,CAAC,GAAGI,GAAG,CAACL,CAAD,CAAb;;AACA,QAAIC,CAAC,IAAI,IAAT,EAAe;AACbK,MAAAA,KAAK,CAACM,IAAN,CAAWb,MAAM,CAACC,CAAD,EAAIC,CAAJ,CAAjB;AACD;AACF,GALD;AAMA,SAAOE,IAAI,CAACG,KAAD,CAAX;AACD,C","sourcesContent":["import hyphenate from 'hyphenate-style-name'\nimport mq from './mediaQuery'\n\nconst negate = (cond) => `not ${cond}`\n\nconst keyVal = (k, v) => {\n  const realKey = hyphenate(k)\n\n  // px shorthand\n  if (typeof v === 'number') {\n    v = `${v}px`\n  }\n  if (v === true) {\n    return realKey\n  }\n  if (v === false) {\n    return negate(realKey)\n  }\n  return `(${realKey}: ${v})`\n}\n\nconst join = (conds) => conds.join(' and ')\n\nexport default (obj) => {\n  const rules = []\n  Object.keys(mq.all).forEach((k) => {\n    const v = obj[k]\n    if (v != null) {\n      rules.push(keyVal(k, v))\n    }\n  })\n  return join(rules)\n}\n"],"file":"toQuery.js"}